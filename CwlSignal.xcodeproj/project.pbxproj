// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 46;
	objects = {

/* Begin PBXAggregateTarget section */
		C919A6462131478400C7C374 /* CwlPreconditionTesting_iOS */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = C919A6472131478400C7C374 /* Build configuration list for PBXAggregateTarget "CwlPreconditionTesting_iOS" */;
			buildPhases = (
				C97DBABC213147BF00996588 /* Invoke CwlPackageBuild/main.swift to build CwlPreconditionTesting */,
			);
			dependencies = (
				C919A64B213147AE00C7C374 /* PBXTargetDependency */,
			);
			name = CwlPreconditionTesting_iOS;
			productName = CwlPreconditionTesting_iOS;
		};
		C91ADA5C2130CF3D000EE9B7 /* CwlPreconditionTesting_macOS */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = C91ADA5D2130CF3D000EE9B7 /* Build configuration list for PBXAggregateTarget "CwlPreconditionTesting_macOS" */;
			buildPhases = (
				C91ADA622130D183000EE9B7 /* Invoke CwlPackageBuild/main.swift to build CwlUtils */,
			);
			dependencies = (
				C91ADA612130D09B000EE9B7 /* PBXTargetDependency */,
			);
			name = CwlPreconditionTesting_macOS;
			productName = CwlPreconditionTesting_macOS;
		};
		C945D7C01E5038C4009AFB8E /* PackageFetch */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = C945D7C31E5038C4009AFB8E /* Build configuration list for PBXAggregateTarget "PackageFetch" */;
			buildPhases = (
				C945D7C41E5038D5009AFB8E /* Run CwlPackageFetch/main.swift to download dependencies, if needed */,
			);
			dependencies = (
			);
			name = PackageFetch;
			productName = FetchDependencies;
		};
		C94E59A9211C6A5E00FF7E19 /* CwlUtils_iOS */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = C94E59AA211C6A5E00FF7E19 /* Build configuration list for PBXAggregateTarget "CwlUtils_iOS" */;
			buildPhases = (
				C94E59AF211C6AD900FF7E19 /* Invoke CwlPackageBuild/main.swift to build CwlUtils */,
			);
			dependencies = (
				C94E59AE211C6AB800FF7E19 /* PBXTargetDependency */,
			);
			name = CwlUtils_iOS;
			productName = PackageBuild_iOS;
		};
		C94E59B0211C6B5D00FF7E19 /* CwlUtils_macOS */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = C94E59B1211C6B5D00FF7E19 /* Build configuration list for PBXAggregateTarget "CwlUtils_macOS" */;
			buildPhases = (
				C94E59B6211C6C7300FF7E19 /* Invoke CwlPackageBuild/main.swift to build CwlUtils */,
			);
			dependencies = (
				C94E59B5211C6C0600FF7E19 /* PBXTargetDependency */,
			);
			name = CwlUtils_macOS;
			productName = PackageBuild_macOS;
		};
		C9A380371EFF923A00BFF2E5 /* CwlSignalConcat */ = {
			isa = PBXAggregateTarget;
			buildConfigurationList = C9A3803A1EFF923A00BFF2E5 /* Build configuration list for PBXAggregateTarget "CwlSignalConcat" */;
			buildPhases = (
				C9110BA82136B0C0007F0FF1 /* Invoke CwlPackageBuild/main.swift to build CwlUtilsConcat */,
				C9A3803D1EFF924700BFF2E5 /* Invoke CwlConcat/main.swift to concatenate CwlSignal */,
			);
			dependencies = (
				C9A3803C1EFF924300BFF2E5 /* PBXTargetDependency */,
			);
			name = CwlSignalConcat;
			productName = CwlSignalConcat;
		};
/* End PBXAggregateTarget section */

/* Begin PBXBuildFile section */
		C90BDC541F01FEC300112A54 /* CwlSignalChannel.swift in Sources */ = {isa = PBXBuildFile; fileRef = C90BDC531F01FEC300112A54 /* CwlSignalChannel.swift */; };
		C90BDC551F01FEC300112A54 /* CwlSignalChannel.swift in Sources */ = {isa = PBXBuildFile; fileRef = C90BDC531F01FEC300112A54 /* CwlSignalChannel.swift */; };
		C9C1CECF1F6BC58B00A9343F /* CwlSignalTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* CwlSignalTests.swift */; };
		C9DD3D771E41CD9000E23B15 /* CwlSignal.h in Headers */ = {isa = PBXBuildFile; fileRef = C9DD3D761E41CD9000E23B15 /* CwlSignal.h */; settings = {ATTRIBUTES = (Public, ); }; };
		C9DD3D8E1E41DFB600E23B15 /* CwlSignal.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_9 /* CwlSignal.swift */; };
		C9DD3D8F1E41DFB600E23B15 /* CwlSignalCocoa.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* CwlSignalCocoa.swift */; };
		C9DD3D901E41DFB600E23B15 /* CwlSignalExtensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* CwlSignalExtensions.swift */; };
		C9DD3D911E41DFB600E23B15 /* CwlSignalReactive.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_12 /* CwlSignalReactive.swift */; };
		C9DD3D951E41DFB600E23B15 /* CwlSignal.h in Headers */ = {isa = PBXBuildFile; fileRef = C9DD3D761E41CD9000E23B15 /* CwlSignal.h */; settings = {ATTRIBUTES = (Public, ); }; };
		C9DD3D9F1E41DFBA00E23B15 /* CwlSignalCocoaTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* CwlSignalCocoaTests.swift */; };
		C9DD3DA01E41DFBA00E23B15 /* CwlSignalReactiveTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* CwlSignalReactiveTests.swift */; };
		C9DD3DA11E41DFBA00E23B15 /* CwlSignalTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_17 /* CwlSignalTests.swift */; };
		C9DD3DA31E41DFBA00E23B15 /* CwlSignal.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_77 /* CwlSignal.framework */; };
		OBJ_195 /* CwlSignal.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_9 /* CwlSignal.swift */; };
		OBJ_196 /* CwlSignalCocoa.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_10 /* CwlSignalCocoa.swift */; };
		OBJ_197 /* CwlSignalExtensions.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_11 /* CwlSignalExtensions.swift */; };
		OBJ_198 /* CwlSignalReactive.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_12 /* CwlSignalReactive.swift */; };
		OBJ_219 /* CwlSignalCocoaTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_15 /* CwlSignalCocoaTests.swift */; };
		OBJ_220 /* CwlSignalReactiveTests.swift in Sources */ = {isa = PBXBuildFile; fileRef = OBJ_16 /* CwlSignalReactiveTests.swift */; };
		OBJ_230 /* CwlSignal.framework in Frameworks */ = {isa = PBXBuildFile; fileRef = OBJ_77 /* CwlSignal.framework */; };
/* End PBXBuildFile section */

/* Begin PBXContainerItemProxy section */
		C919A64A213147AE00C7C374 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C945D7C01E5038C4009AFB8E;
			remoteInfo = PackageFetch;
		};
		C91ADA602130D09B000EE9B7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C945D7C01E5038C4009AFB8E;
			remoteInfo = PackageFetch;
		};
		C91ADA632130D259000EE9B7 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C91ADA5C2130CF3D000EE9B7;
			remoteInfo = CwlPreconditionTesting_macOS;
		};
		C94E59AD211C6AB800FF7E19 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C945D7C01E5038C4009AFB8E;
			remoteInfo = PackageFetch;
		};
		C94E59B4211C6C0600FF7E19 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C945D7C01E5038C4009AFB8E;
			remoteInfo = PackageFetch;
		};
		C94E59B7211C6CD700FF7E19 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C94E59A9211C6A5E00FF7E19;
			remoteInfo = PackageBuild_iOS;
		};
		C94E59B9211C6CE200FF7E19 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C94E59B0211C6B5D00FF7E19;
			remoteInfo = PackageBuild_macOS;
		};
		C97DBAD72131486600996588 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C919A6462131478400C7C374;
			remoteInfo = CwlPreconditionTesting_iOS;
		};
		C9A3803B1EFF924300BFF2E5 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C945D7C01E5038C4009AFB8E;
			remoteInfo = FetchDependencies;
		};
		C9DD3D601E41ACAF00E23B15 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = OBJ_190;
			remoteInfo = CwlSignal;
		};
		C9DD3DAA1E41E52E00E23B15 /* PBXContainerItemProxy */ = {
			isa = PBXContainerItemProxy;
			containerPortal = OBJ_1 /* Project object */;
			proxyType = 1;
			remoteGlobalIDString = C9DD3D7C1E41DFB600E23B15;
			remoteInfo = CwlSignal_iOS;
		};
/* End PBXContainerItemProxy section */

/* Begin PBXFileReference section */
		C90BDC531F01FEC300112A54 /* CwlSignalChannel.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CwlSignalChannel.swift; sourceTree = "<group>"; };
		C9694ABE213BC2AC001A29C2 /* CwlUtils.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = CwlUtils.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		C9694ABF213BC2AC001A29C2 /* CwlCatchException.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = CwlCatchException.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		C9694AC0213BC2AC001A29C2 /* CwlPreconditionTesting.framework */ = {isa = PBXFileReference; lastKnownFileType = wrapper.framework; path = CwlPreconditionTesting.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		C9DD3D761E41CD9000E23B15 /* CwlSignal.h */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.c.h; path = CwlSignal.h; sourceTree = "<group>"; };
		C9DD3D781E41CD9F00E23B15 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		C9DD3D7A1E41D15A00E23B15 /* Info.plist */ = {isa = PBXFileReference; lastKnownFileType = text.plist.xml; path = Info.plist; sourceTree = "<group>"; };
		C9DD3D7B1E41D19900E23B15 /* CwlSignal.playground */ = {isa = PBXFileReference; lastKnownFileType = file.playground; path = CwlSignal.playground; sourceTree = "<group>"; };
		C9DD3D991E41DFB600E23B15 /* CwlSignal.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; includeInIndex = 0; path = CwlSignal.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		C9DD3DA71E41DFBA00E23B15 /* CwlSignal_iOSTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; includeInIndex = 0; path = CwlSignal_iOSTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_10 /* CwlSignalCocoa.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CwlSignalCocoa.swift; sourceTree = "<group>"; };
		OBJ_11 /* CwlSignalExtensions.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CwlSignalExtensions.swift; sourceTree = "<group>"; };
		OBJ_12 /* CwlSignalReactive.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CwlSignalReactive.swift; sourceTree = "<group>"; };
		OBJ_15 /* CwlSignalCocoaTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CwlSignalCocoaTests.swift; sourceTree = "<group>"; };
		OBJ_16 /* CwlSignalReactiveTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CwlSignalReactiveTests.swift; sourceTree = "<group>"; };
		OBJ_17 /* CwlSignalTests.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CwlSignalTests.swift; sourceTree = "<group>"; };
		OBJ_6 /* Package.swift */ = {isa = PBXFileReference; explicitFileType = sourcecode.swift; path = Package.swift; sourceTree = "<group>"; };
		OBJ_77 /* CwlSignal.framework */ = {isa = PBXFileReference; explicitFileType = wrapper.framework; path = CwlSignal.framework; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_78 /* CwlSignal_macOSTests.xctest */ = {isa = PBXFileReference; explicitFileType = wrapper.cfbundle; path = CwlSignal_macOSTests.xctest; sourceTree = BUILT_PRODUCTS_DIR; };
		OBJ_9 /* CwlSignal.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = CwlSignal.swift; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		C9DD3D921E41DFB600E23B15 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C9DD3DA21E41DFBA00E23B15 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				C9DD3DA31E41DFBA00E23B15 /* CwlSignal.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_199 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_222 /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_230 /* CwlSignal.framework in Frameworks */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		C9694ABD213BC240001A29C2 /* Packages */ = {
			isa = PBXGroup;
			children = (
				C9694ABF213BC2AC001A29C2 /* CwlCatchException.framework */,
				C9694AC0213BC2AC001A29C2 /* CwlPreconditionTesting.framework */,
				C9694ABE213BC2AC001A29C2 /* CwlUtils.framework */,
			);
			name = Packages;
			sourceTree = "<group>";
		};
		OBJ_13 /* Tests */ = {
			isa = PBXGroup;
			children = (
				OBJ_14 /* CwlSignalTests */,
			);
			name = Tests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_14 /* CwlSignalTests */ = {
			isa = PBXGroup;
			children = (
				OBJ_17 /* CwlSignalTests.swift */,
				OBJ_15 /* CwlSignalCocoaTests.swift */,
				OBJ_16 /* CwlSignalReactiveTests.swift */,
				C9DD3D7A1E41D15A00E23B15 /* Info.plist */,
			);
			name = CwlSignalTests;
			path = Tests/CwlSignalTests;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_5 = {
			isa = PBXGroup;
			children = (
				C9DD3D7B1E41D19900E23B15 /* CwlSignal.playground */,
				OBJ_6 /* Package.swift */,
				C9694ABD213BC240001A29C2 /* Packages */,
				OBJ_69 /* Products */,
				OBJ_7 /* Sources */,
				OBJ_13 /* Tests */,
			);
			sourceTree = "<group>";
		};
		OBJ_69 /* Products */ = {
			isa = PBXGroup;
			children = (
				OBJ_77 /* CwlSignal.framework */,
				OBJ_78 /* CwlSignal_macOSTests.xctest */,
				C9DD3D991E41DFB600E23B15 /* CwlSignal.framework */,
				C9DD3DA71E41DFBA00E23B15 /* CwlSignal_iOSTests.xctest */,
			);
			name = Products;
			sourceTree = BUILT_PRODUCTS_DIR;
		};
		OBJ_7 /* Sources */ = {
			isa = PBXGroup;
			children = (
				OBJ_8 /* CwlSignal */,
			);
			name = Sources;
			sourceTree = SOURCE_ROOT;
		};
		OBJ_8 /* CwlSignal */ = {
			isa = PBXGroup;
			children = (
				C9DD3D761E41CD9000E23B15 /* CwlSignal.h */,
				OBJ_9 /* CwlSignal.swift */,
				C90BDC531F01FEC300112A54 /* CwlSignalChannel.swift */,
				OBJ_10 /* CwlSignalCocoa.swift */,
				OBJ_11 /* CwlSignalExtensions.swift */,
				OBJ_12 /* CwlSignalReactive.swift */,
				C9DD3D781E41CD9F00E23B15 /* Info.plist */,
			);
			name = CwlSignal;
			path = Sources/CwlSignal;
			sourceTree = SOURCE_ROOT;
		};
/* End PBXGroup section */

/* Begin PBXHeadersBuildPhase section */
		C9DD3D751E41CD7100E23B15 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				C9DD3D771E41CD9000E23B15 /* CwlSignal.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C9DD3D931E41DFB600E23B15 /* Headers */ = {
			isa = PBXHeadersBuildPhase;
			buildActionMask = 2147483647;
			files = (
				C9DD3D951E41DFB600E23B15 /* CwlSignal.h in Headers */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXHeadersBuildPhase section */

/* Begin PBXNativeTarget section */
		C9DD3D7C1E41DFB600E23B15 /* CwlSignal_iOS */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = C9DD3D961E41DFB600E23B15 /* Build configuration list for PBXNativeTarget "CwlSignal_iOS" */;
			buildPhases = (
				C9DD3D7E1E41DFB600E23B15 /* Sources */,
				C9DD3D921E41DFB600E23B15 /* Frameworks */,
				C9DD3D931E41DFB600E23B15 /* Headers */,
			);
			buildRules = (
			);
			dependencies = (
				C94E59B8211C6CD700FF7E19 /* PBXTargetDependency */,
			);
			name = CwlSignal_iOS;
			productName = CwlSignal;
			productReference = C9DD3D991E41DFB600E23B15 /* CwlSignal.framework */;
			productType = "com.apple.product-type.framework";
		};
		C9DD3D9B1E41DFBA00E23B15 /* CwlSignal_iOSTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = C9DD3DA41E41DFBA00E23B15 /* Build configuration list for PBXNativeTarget "CwlSignal_iOSTests" */;
			buildPhases = (
				C9DD3D9E1E41DFBA00E23B15 /* Sources */,
				C9DD3DA21E41DFBA00E23B15 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				C97DBAD82131486600996588 /* PBXTargetDependency */,
				C9DD3DAB1E41E52E00E23B15 /* PBXTargetDependency */,
			);
			name = CwlSignal_iOSTests;
			productName = CwlSignalTests;
			productReference = C9DD3DA71E41DFBA00E23B15 /* CwlSignal_iOSTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
		OBJ_190 /* CwlSignal_macOS */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_191 /* Build configuration list for PBXNativeTarget "CwlSignal_macOS" */;
			buildPhases = (
				OBJ_194 /* Sources */,
				OBJ_199 /* Frameworks */,
				C9DD3D751E41CD7100E23B15 /* Headers */,
			);
			buildRules = (
			);
			dependencies = (
				C94E59BA211C6CE200FF7E19 /* PBXTargetDependency */,
			);
			name = CwlSignal_macOS;
			productName = CwlSignal;
			productReference = OBJ_77 /* CwlSignal.framework */;
			productType = "com.apple.product-type.framework";
		};
		OBJ_214 /* CwlSignal_macOSTests */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = OBJ_215 /* Build configuration list for PBXNativeTarget "CwlSignal_macOSTests" */;
			buildPhases = (
				OBJ_218 /* Sources */,
				OBJ_222 /* Frameworks */,
			);
			buildRules = (
			);
			dependencies = (
				C91ADA642130D259000EE9B7 /* PBXTargetDependency */,
				OBJ_238 /* PBXTargetDependency */,
			);
			name = CwlSignal_macOSTests;
			productName = CwlSignalTests;
			productReference = OBJ_78 /* CwlSignal_macOSTests.xctest */;
			productType = "com.apple.product-type.bundle.unit-test";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		OBJ_1 /* Project object */ = {
			isa = PBXProject;
			attributes = {
				LastUpgradeCheck = 0930;
				ORGANIZATIONNAME = "Matt Gallagher ( https://www.cocoawithlove.com )";
				TargetAttributes = {
					C919A6462131478400C7C374 = {
						CreatedOnToolsVersion = 10.0;
						ProvisioningStyle = Automatic;
					};
					C91ADA5C2130CF3D000EE9B7 = {
						CreatedOnToolsVersion = 10.0;
						ProvisioningStyle = Automatic;
					};
					C945D7C01E5038C4009AFB8E = {
						CreatedOnToolsVersion = 9.0;
						LastSwiftMigration = 0900;
					};
					C94E59A9211C6A5E00FF7E19 = {
						CreatedOnToolsVersion = 10.0;
					};
					C94E59B0211C6B5D00FF7E19 = {
						CreatedOnToolsVersion = 10.0;
					};
					C9A380371EFF923A00BFF2E5 = {
						CreatedOnToolsVersion = 9.0;
					};
					C9DD3D7C1E41DFB600E23B15 = {
						LastSwiftMigration = 0900;
					};
					C9DD3D9B1E41DFBA00E23B15 = {
						LastSwiftMigration = 0900;
					};
					OBJ_190 = {
						LastSwiftMigration = 0900;
					};
					OBJ_214 = {
						LastSwiftMigration = 0900;
					};
				};
			};
			buildConfigurationList = OBJ_2 /* Build configuration list for PBXProject "CwlSignal" */;
			compatibilityVersion = "Xcode 3.2";
			developmentRegion = English;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = OBJ_5;
			productRefGroup = OBJ_69 /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				C945D7C01E5038C4009AFB8E /* PackageFetch */,
				C94E59A9211C6A5E00FF7E19 /* CwlUtils_iOS */,
				C919A6462131478400C7C374 /* CwlPreconditionTesting_iOS */,
				C9DD3D7C1E41DFB600E23B15 /* CwlSignal_iOS */,
				C9DD3D9B1E41DFBA00E23B15 /* CwlSignal_iOSTests */,
				C94E59B0211C6B5D00FF7E19 /* CwlUtils_macOS */,
				C91ADA5C2130CF3D000EE9B7 /* CwlPreconditionTesting_macOS */,
				OBJ_190 /* CwlSignal_macOS */,
				OBJ_214 /* CwlSignal_macOSTests */,
				C9A380371EFF923A00BFF2E5 /* CwlSignalConcat */,
			);
		};
/* End PBXProject section */

/* Begin PBXShellScriptBuildPhase section */
		C9110BA82136B0C0007F0FF1 /* Invoke CwlPackageBuild/main.swift to build CwlUtilsConcat */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Invoke CwlPackageBuild/main.swift to build CwlUtilsConcat";
			outputFileListPaths = (
			);
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = "/usr/bin/xcrun --sdk macosx swift $(SRCROOT)/.build/symlinks/CwlUtils/Scripts/CwlPackageBuild/main.swift";
			shellScript = "
";
		};
		C91ADA622130D183000EE9B7 /* Invoke CwlPackageBuild/main.swift to build CwlUtils */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"$(SRCROOT)/.build/dependencies-state.json",
				"$(SRCROOT)/Carthage/Build/Mac/CwlPreconditionTesting.framework",
				"$(SRCROOT)/Carthage/Build/Mac/CwlCatchException.framework",
			);
			name = "Invoke CwlPackageBuild/main.swift to build CwlUtils";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(BUILT_PRODUCTS_DIR)/CwlPreconditionTesting.framework",
				"$(BUILT_PRODUCTS_DIR)/CwlCatchException.framework",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = "/usr/bin/xcrun --sdk macosx swift $(SRCROOT)/.build/symlinks/CwlUtils/Scripts/CwlPackageBuild/main.swift";
			shellScript = "
";
		};
		C945D7C41E5038D5009AFB8E /* Run CwlPackageFetch/main.swift to download dependencies, if needed */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputPaths = (
				"$(SRCROOT)/Package.swift",
			);
			name = "Run CwlPackageFetch/main.swift to download dependencies, if needed";
			outputPaths = (
				"$(SRCROOT)/.build/dependencies-state.json",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = "/usr/bin/xcrun --sdk macosx swift";
			shellScript = "//\n//  main.swift\n//  CwlPackageFetch\n//\n//  Created by Matt Gallagher on 2018/06/14.\n//  Copyright © 2018 Matt Gallagher ( https://www.cocoawithlove.com ). All rights reserved.\n//\n//  Permission to use, copy, modify, and/or distribute this software for any\n//  purpose with or without fee is hereby granted, provided that the above\n//  copyright notice and this permission notice appear in all copies.\n//\n//  THE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES\n//  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF\n//  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY\n//  SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES\n//  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN\n//  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR\n//  IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.\n//\n\nimport Foundation\n\nfunc env(_ key: String) -> String? { return ProcessInfo.processInfo.environment[key] }\nextension FileHandle: TextOutputStream {\n    public func write(_ string: String) { string.data(using: .utf8).map { write($0) } }\n    static var err = FileHandle.standardError\n}\nextension Process {\n    struct Failure: Error {\n        let code: Int32\n        let output: String\n    }\n    convenience init(path: String, directory: URL? = nil, environment: [String: String]? = nil, arguments: String...) {\n        self.init()\n        (self.launchPath, self.arguments) = (path, arguments)\n        _ = directory.map { self.currentDirectoryPath = $0.path }\n        _ = environment.map { self.environment = $0 }\n    }\n    func printInvocation() -> Process {\n        print(\"\\(self.launchPath ?? \"\") \\(self.arguments?.joined(separator: \" \") ?? \"\")\", to: &FileHandle.err)\n        return self\n    }\n    @available(OSX 10.13, *) func runToString() throws -> String {\n        let pipe = Pipe()\n        self.standardOutput = pipe\n        try self.run()\n        let result = String(data: pipe.fileHandleForReading.readDataToEndOfFile(), encoding: .utf8) ?? \"\"\n        self.waitUntilExit()\n        if terminationStatus != 0 { throw Failure(code: terminationStatus, output: result) }\n        return result\n    }\n}\n\n@available(OSX 10.13, *)\nstruct PackageFetch {\n    enum Failure: Swift.Error {\n        case disablingInFavorOfCarthage\n        case fetchAlreadyProcessed\n        case missingEnvironment(String)\n        case cantCreateOutputFile(String)\n    }\n    struct DependencyParseFailure: Error {\n        let srcRoot: URL\n        let description: Dictionary<String, Any>\n        let topLevelPath: String\n    }\n    \n    let toolchainDir: String\n    let projectName: String\n    let srcRoot: URL\n    let packageDir: URL\n    let symlinksURL: URL\n    \n    static func requireEnv(_ key: String) throws -> String {\n        guard let value = env(key) else { throw Failure.missingEnvironment(key) }\n        return value\n    }\n    \n    init() throws {\n        self.toolchainDir = try PackageFetch.requireEnv(\"TOOLCHAIN_DIR\")\n        self.srcRoot = URL(fileURLWithPath: try PackageFetch.requireEnv(\"SRCROOT\"))\n        self.projectName = try PackageFetch.requireEnv(\"PROJECT_NAME\")\n        self.packageDir = srcRoot.appendingPathComponent(\".build\")\n        self.symlinksURL = packageDir.appendingPathComponent(\"symlinks\")\n    }\n    \n    func resolve() throws {\n        print(\"### Starting package resolve into \\(packageDir.path)\", to: &FileHandle.err)\n        \n        let resolveOutput = try Process(\n            path: toolchainDir + \"/usr/bin/swift\",\n            directory: srcRoot,\n            arguments: \"package\", \"--build-path\", \"\\(packageDir.path)\", \"resolve\"\n        ).printInvocation().runToString()\n        \n        if resolveOutput == \"\" {\n            print(\"### All dependencies up-to-date.\", to: &FileHandle.err)\n        } else {\n            print(resolveOutput, terminator: \"\")\n        }\n    }\n    \n    func showDependencies() throws -> String {\n        print(\"### Runing swift package show-dependencies to get package locations\", to: &FileHandle.err)\n        return try Process(\n            path: toolchainDir + \"/usr/bin/swift\",\n            directory: srcRoot,\n            arguments: \"package\", \"--build-path\", \"\\(packageDir.path)\", \"show-dependencies\", \"--format\", \"json\"\n        ).printInvocation().runToString()\n    }\n    \n    static func createSymlink(link: URL, destination: URL) throws {\n        let current = try? FileManager.default.destinationOfSymbolicLink(atPath: link.path)\n        if current == nil || current != destination.relativePath {\n            _ = try? FileManager.default.removeItem(at: link)\n            try FileManager.default.createSymbolicLink(atPath: link.path, withDestinationPath: destination.relativePath)\n            print(\"Created symbolic link: \\(link.path) -> \\(destination.relativePath)\", to: &FileHandle.err)\n        }\n    }\n    \n    func createSymlink(srcRoot: URL, name: String, destination: String) throws {\n        let linkLocation = symlinksURL.appendingPathComponent(name)\n        let linkDestination = URL(fileURLWithPath: \"../\\(destination)\", relativeTo: linkLocation)\n        try PackageFetch.createSymlink(link: linkLocation, destination: linkDestination)\n    }\n    \n    func traverse(srcRoot: URL, description: Dictionary<String, Any>, topLevelPath: String) throws {\n        guard let dependencies = description[\"dependencies\"] as? [Dictionary<String, Any>] else { return }\n        for dependency in dependencies {\n            guard\n                let path = dependency[\"path\"] as? String,\n                let relativePath = (path.range(of: topLevelPath)?.upperBound).map({ String(path[$0...]) }),\n                let name = dependency[\"name\"] as? String\n                else {\n                    throw DependencyParseFailure(srcRoot: srcRoot, description: description, topLevelPath: topLevelPath)\n            }\n            \n            let dependencyBuildDir = URL(fileURLWithPath: path).appendingPathComponent(\".build\")\n            try FileManager.default.createDirectory(at: dependencyBuildDir, withIntermediateDirectories: true, attributes: nil)\n            try PackageFetch.createSymlink(link: dependencyBuildDir.appendingPathComponent(\"symlinks\"), destination: symlinksURL)\n            \n            let dependencies = dependencyBuildDir.appendingPathComponent(\"dependencies-state.json\")\n            guard FileManager.default.createFile(atPath: dependencies.path, contents: nil) else {\n                throw PackageFetch.Failure.cantCreateOutputFile(dependencies.path)\n            }\n            \n            try createSymlink(srcRoot: srcRoot, name: name, destination: relativePath)\n            try traverse(srcRoot: srcRoot, description: dependency, topLevelPath: topLevelPath)\n        }\n    }\n    \n    func parseAndCreateSymlinks(dependencies: String) throws {\n        // Note: despite asking for JSON formatting, in Swift 4.0 there may be other info on STDOUT before the JSON starts.\n        guard\n            let jsonStartIndex = dependencies.index(of: \"{\"),\n            let descriptionData = String(dependencies[jsonStartIndex...]).data(using: .utf8),\n            let description = try JSONSerialization.jsonObject(with: descriptionData, options: []) as? Dictionary<String, Any>\n            else {\n                throw DependencyParseFailure(srcRoot: srcRoot, description: [:], topLevelPath: packageDir.path + \"/\")\n        }\n        try FileManager.default.createDirectory(at: symlinksURL, withIntermediateDirectories: true, attributes: nil)\n        try traverse(srcRoot: srcRoot, description: description, topLevelPath: packageDir.path + \"/\")\n    }\n    \n    static func fetch() throws {\n        guard env(\"CARTHAGE\") != \"YES\" else { throw Failure.disablingInFavorOfCarthage }\n        guard env(\"CWL_PACKAGE_DIR\") == nil else { throw Failure.fetchAlreadyProcessed }\n        \n        let fetch = try PackageFetch()\n        try fetch.resolve()\n        let dependencies = try fetch.showDependencies()\n        try fetch.parseAndCreateSymlinks(dependencies: dependencies)\n        print(\"### Complete.\", to: &FileHandle.err)\n    }\n}\n\nif #available(OSX 10.13, *) {\n    do {\n        try PackageFetch.fetch()\n    } catch PackageFetch.Failure.disablingInFavorOfCarthage {\n        print(\"Fetching using swift package manager disabled in favor of Carthage\", to: &FileHandle.err)\n    } catch PackageFetch.Failure.fetchAlreadyProcessed {\n        print(\"Package fetching disabled in child build\", to: &FileHandle.err)\n    } catch {\n        print(\"Failed: \\(error)\", to: &FileHandle.err)\n        exit(1)\n    }\n} else {\n    print(\"Failed: script must run on mac OS X 10.13 or newer\", to: &FileHandle.err)\n    exit(1)\n}\n";
			showEnvVarsInLog = 0;
		};
		C94E59AF211C6AD900FF7E19 /* Invoke CwlPackageBuild/main.swift to build CwlUtils */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"$(SRCROOT)/.build/dependencies-state.json",
				"$(SRCROOT)/Carthage/Build/iOS/CwlUtils.framework",
			);
			name = "Invoke CwlPackageBuild/main.swift to build CwlUtils";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(BUILT_PRODUCTS_DIR)/CwlUtils.framework",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "if [ \"$CARTHAGE\" == \"YES\" ]; then CHECKOUTS=\"$SRCROOT/Carthage/Checkouts\"; else CHECKOUTS=\"$SRCROOT/.build/symlinks\"; fi\n/usr/bin/xcrun --sdk macosx swift \"$CHECKOUTS/CwlUtils/Scripts/CwlPackageBuild/main.swift\"\n";
		};
		C94E59B6211C6C7300FF7E19 /* Invoke CwlPackageBuild/main.swift to build CwlUtils */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"$(SRCROOT)/.build/dependencies-state.json",
				"$(SRCROOT)/Carthage/Build/Mac/CwlUtils.framework",
			);
			name = "Invoke CwlPackageBuild/main.swift to build CwlUtils";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(BUILT_PRODUCTS_DIR)/CwlUtils.framework",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "if [ \"$CARTHAGE\" == \"YES\" ]; then CHECKOUTS=\"$SRCROOT/Carthage/Checkouts\"; else CHECKOUTS=\"$SRCROOT/.build/symlinks\"; fi\n/usr/bin/xcrun --sdk macosx swift \"$CHECKOUTS/CwlUtils/Scripts/CwlPackageBuild/main.swift\"\n";
		};
		C97DBABC213147BF00996588 /* Invoke CwlPackageBuild/main.swift to build CwlPreconditionTesting */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
				"$(SRCROOT)/.build/dependencies-state.json",
				"$(SRCROOT)/Carthage/Build/iOS/CwlCatchException.framework",
				"$(SRCROOT)/Carthage/Build/iOS/CwlPreconditionTesting.framework",
			);
			name = "Invoke CwlPackageBuild/main.swift to build CwlPreconditionTesting";
			outputFileListPaths = (
			);
			outputPaths = (
				"$(BUILT_PRODUCTS_DIR)/CwlCatchException.framework",
				"$(BUILT_PRODUCTS_DIR)/CwlPreconditionTesting.framework",
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = "/usr/bin/xcrun --sdk macosx swift $(SRCROOT)/.build/symlinks/CwlUtils/Scripts/CwlPackageBuild/main.swift";
			shellScript = "
";
		};
		C9A3803D1EFF924700BFF2E5 /* Invoke CwlConcat/main.swift to concatenate CwlSignal */ = {
			isa = PBXShellScriptBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			inputFileListPaths = (
			);
			inputPaths = (
			);
			name = "Invoke CwlConcat/main.swift to concatenate CwlSignal";
			outputPaths = (
			);
			runOnlyForDeploymentPostprocessing = 0;
			shellPath = /bin/sh;
			shellScript = "/usr/bin/xcrun --sdk macosx swift \"$SRCROOT/.build/symlinks/CwlUtils/Scripts/CwlConcat/main.swift\" -f CwlSignal -n CwlSignal.swift -i \"$SRCROOT/Sources/CwlSignal/CwlSignal.swift\" -x \"$SRCROOT/Sources/CwlSignal/CwlSignal.swift\" -i \"$SRCROOT/Sources/CwlSignal\"\n";
		};
/* End PBXShellScriptBuildPhase section */

/* Begin PBXSourcesBuildPhase section */
		C9DD3D7E1E41DFB600E23B15 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				C9DD3D8E1E41DFB600E23B15 /* CwlSignal.swift in Sources */,
				C90BDC551F01FEC300112A54 /* CwlSignalChannel.swift in Sources */,
				C9DD3D8F1E41DFB600E23B15 /* CwlSignalCocoa.swift in Sources */,
				C9DD3D901E41DFB600E23B15 /* CwlSignalExtensions.swift in Sources */,
				C9DD3D911E41DFB600E23B15 /* CwlSignalReactive.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		C9DD3D9E1E41DFBA00E23B15 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				C9DD3D9F1E41DFBA00E23B15 /* CwlSignalCocoaTests.swift in Sources */,
				C9DD3DA01E41DFBA00E23B15 /* CwlSignalReactiveTests.swift in Sources */,
				C9DD3DA11E41DFBA00E23B15 /* CwlSignalTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_194 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				OBJ_195 /* CwlSignal.swift in Sources */,
				C90BDC541F01FEC300112A54 /* CwlSignalChannel.swift in Sources */,
				OBJ_196 /* CwlSignalCocoa.swift in Sources */,
				OBJ_197 /* CwlSignalExtensions.swift in Sources */,
				OBJ_198 /* CwlSignalReactive.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
		OBJ_218 /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 0;
			files = (
				C9C1CECF1F6BC58B00A9343F /* CwlSignalTests.swift in Sources */,
				OBJ_219 /* CwlSignalCocoaTests.swift in Sources */,
				OBJ_220 /* CwlSignalReactiveTests.swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin PBXTargetDependency section */
		C919A64B213147AE00C7C374 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C945D7C01E5038C4009AFB8E /* PackageFetch */;
			targetProxy = C919A64A213147AE00C7C374 /* PBXContainerItemProxy */;
		};
		C91ADA612130D09B000EE9B7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C945D7C01E5038C4009AFB8E /* PackageFetch */;
			targetProxy = C91ADA602130D09B000EE9B7 /* PBXContainerItemProxy */;
		};
		C91ADA642130D259000EE9B7 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C91ADA5C2130CF3D000EE9B7 /* CwlPreconditionTesting_macOS */;
			targetProxy = C91ADA632130D259000EE9B7 /* PBXContainerItemProxy */;
		};
		C94E59AE211C6AB800FF7E19 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C945D7C01E5038C4009AFB8E /* PackageFetch */;
			targetProxy = C94E59AD211C6AB800FF7E19 /* PBXContainerItemProxy */;
		};
		C94E59B5211C6C0600FF7E19 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C945D7C01E5038C4009AFB8E /* PackageFetch */;
			targetProxy = C94E59B4211C6C0600FF7E19 /* PBXContainerItemProxy */;
		};
		C94E59B8211C6CD700FF7E19 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C94E59A9211C6A5E00FF7E19 /* CwlUtils_iOS */;
			targetProxy = C94E59B7211C6CD700FF7E19 /* PBXContainerItemProxy */;
		};
		C94E59BA211C6CE200FF7E19 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C94E59B0211C6B5D00FF7E19 /* CwlUtils_macOS */;
			targetProxy = C94E59B9211C6CE200FF7E19 /* PBXContainerItemProxy */;
		};
		C97DBAD82131486600996588 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C919A6462131478400C7C374 /* CwlPreconditionTesting_iOS */;
			targetProxy = C97DBAD72131486600996588 /* PBXContainerItemProxy */;
		};
		C9A3803C1EFF924300BFF2E5 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C945D7C01E5038C4009AFB8E /* PackageFetch */;
			targetProxy = C9A3803B1EFF924300BFF2E5 /* PBXContainerItemProxy */;
		};
		C9DD3DAB1E41E52E00E23B15 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = C9DD3D7C1E41DFB600E23B15 /* CwlSignal_iOS */;
			targetProxy = C9DD3DAA1E41E52E00E23B15 /* PBXContainerItemProxy */;
		};
		OBJ_238 /* PBXTargetDependency */ = {
			isa = PBXTargetDependency;
			target = OBJ_190 /* CwlSignal_macOS */;
			targetProxy = C9DD3D601E41ACAF00E23B15 /* PBXContainerItemProxy */;
		};
/* End PBXTargetDependency section */

/* Begin XCBuildConfiguration section */
		C919A6482131478400C7C374 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CWL_PACKAGE_NAME = CwlPreconditionTesting;
				CWL_PRODUCT_NAMES = "CwlCatchException.framework,CwlPreconditionTesting.framework";
				CWL_SDK = "$(SDKROOT)";
				CWL_TARGET_NAME = CwlPreconditionTesting_iOS;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
			};
			name = Debug;
		};
		C919A6492131478400C7C374 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CWL_PACKAGE_NAME = CwlPreconditionTesting;
				CWL_PRODUCT_NAMES = "CwlCatchException.framework,CwlPreconditionTesting.framework";
				CWL_SDK = "$(SDKROOT)";
				CWL_TARGET_NAME = CwlPreconditionTesting_iOS;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
			};
			name = Release;
		};
		C91ADA5E2130CF3D000EE9B7 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				CWL_PACKAGE_NAME = CwlPreconditionTesting;
				CWL_PRODUCT_NAMES = "CwlPreconditionTesting.framework,CwlCatchException.framework";
				CWL_SDK = "$(SDKROOT)";
				CWL_TARGET_NAME = CwlPreconditionTesting_macOS;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
			};
			name = Debug;
		};
		C91ADA5F2130CF3D000EE9B7 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_STYLE = Automatic;
				CWL_PACKAGE_NAME = CwlPreconditionTesting;
				CWL_PRODUCT_NAMES = "CwlPreconditionTesting.framework,CwlCatchException.framework";
				CWL_SDK = "$(SDKROOT)";
				CWL_TARGET_NAME = CwlPreconditionTesting_macOS;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
			};
			name = Release;
		};
		C945D7C11E5038C4009AFB8E /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Debug;
		};
		C945D7C21E5038C4009AFB8E /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				PRODUCT_NAME = "$(TARGET_NAME)";
			};
			name = Release;
		};
		C94E59AB211C6A5E00FF7E19 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CWL_PACKAGE_NAME = CwlUtils;
				CWL_PRODUCT_NAMES = CwlUtils.framework;
				CWL_SDK = "$(SDKROOT)";
				CWL_TARGET_NAME = CwlUtils_iOS;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
			};
			name = Debug;
		};
		C94E59AC211C6A5E00FF7E19 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CWL_PACKAGE_NAME = CwlUtils;
				CWL_PRODUCT_NAMES = CwlUtils.framework;
				CWL_SDK = "$(SDKROOT)";
				CWL_TARGET_NAME = CwlUtils_iOS;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
			};
			name = Release;
		};
		C94E59B2211C6B5D00FF7E19 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CWL_PACKAGE_NAME = CwlUtils;
				CWL_PRODUCT_NAMES = CwlUtils.framework;
				CWL_SDK = "$(SDKROOT)";
				CWL_TARGET_NAME = CwlUtils_macOS;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
			};
			name = Debug;
		};
		C94E59B3211C6B5D00FF7E19 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CWL_PACKAGE_NAME = CwlUtils;
				CWL_PRODUCT_NAMES = CwlUtils.framework;
				CWL_SDK = "$(SDKROOT)";
				CWL_TARGET_NAME = CwlUtils_macOS;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
			};
			name = Release;
		};
		C9A380381EFF923A00BFF2E5 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CWL_PACKAGE_NAME = CwlUtils;
				CWL_PRODUCT_NAMES = "";
				CWL_SDK = "$(SDKROOT)";
				CWL_TARGET_NAME = CwlUtilsConcat;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
			};
			name = Debug;
		};
		C9A380391EFF923A00BFF2E5 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CWL_PACKAGE_NAME = CwlUtils;
				CWL_PRODUCT_NAMES = "";
				CWL_SDK = "$(SDKROOT)";
				CWL_TARGET_NAME = CwlUtilsConcat;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
			};
			name = Release;
		};
		C9DD3D971E41DFB600E23B15 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				APPLICATION_EXTENSION_API_ONLY = YES;
				CLANG_ENABLE_MODULES = YES;
				DEFINES_MODULE = YES;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				INFOPLIST_FILE = Sources/CwlSignal/Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "@executable_path/Frameworks @loader_path/Frameworks";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = "com.cocoawithlove.CwlSignal-iOS";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				TARGETED_DEVICE_FAMILY = "1,2";
				TARGET_NAME = CwlSignal;
			};
			name = Debug;
		};
		C9DD3D981E41DFB600E23B15 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				APPLICATION_EXTENSION_API_ONLY = YES;
				CLANG_ENABLE_MODULES = YES;
				DEFINES_MODULE = YES;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				INFOPLIST_FILE = Sources/CwlSignal/Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "@executable_path/Frameworks @loader_path/Frameworks";
				PRODUCT_BUNDLE_IDENTIFIER = "com.cocoawithlove.CwlSignal-iOS";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
				SKIP_INSTALL = YES;
				TARGETED_DEVICE_FAMILY = "1,2";
				TARGET_NAME = CwlSignal;
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
		C9DD3DA51E41DFBA00E23B15 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				INFOPLIST_FILE = Tests/CwlSignalTests/Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "@executable_path/Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = "com.cocoawithlove.CwlUtils-iOSTests";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
			};
			name = Debug;
		};
		C9DD3DA61E41DFBA00E23B15 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				INFOPLIST_FILE = Tests/CwlSignalTests/Info.plist;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				LD_RUNPATH_SEARCH_PATHS = "@executable_path/Frameworks @loader_path/Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = "com.cocoawithlove.CwlUtils-iOSTests";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = iphoneos;
			};
			name = Release;
		};
		OBJ_192 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				DEFINES_MODULE = YES;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				ENABLE_TESTABILITY = YES;
				INFOPLIST_FILE = Sources/CwlSignal/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@executable_path/../Frameworks @loader_path/Frameworks";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = "com.cocoawithlove.CwlSignal-macOS";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SDKROOT = macosx;
				SKIP_INSTALL = YES;
				TARGET_NAME = CwlSignal;
			};
			name = Debug;
		};
		OBJ_193 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CLANG_ENABLE_MODULES = YES;
				DEFINES_MODULE = YES;
				DYLIB_INSTALL_NAME_BASE = "@rpath";
				INFOPLIST_FILE = Sources/CwlSignal/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@executable_path/../Frameworks @loader_path/Frameworks";
				PRODUCT_BUNDLE_IDENTIFIER = "com.cocoawithlove.CwlSignal-macOS";
				PRODUCT_NAME = "$(TARGET_NAME:c99extidentifier)";
				SDKROOT = macosx;
				SKIP_INSTALL = YES;
				TARGET_NAME = CwlSignal;
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
		OBJ_216 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				INFOPLIST_FILE = Tests/CwlSignalTests/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = "com.cocoawithlove.CwlUtils-macOSTests";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
			};
			name = Debug;
		};
		OBJ_217 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_EMBED_SWIFT_STANDARD_LIBRARIES = YES;
				INFOPLIST_FILE = Tests/CwlSignalTests/Info.plist;
				LD_RUNPATH_SEARCH_PATHS = "@loader_path/../Frameworks";
				OTHER_LDFLAGS = "$(inherited)";
				OTHER_SWIFT_FLAGS = "$(inherited)";
				PRODUCT_BUNDLE_IDENTIFIER = "com.cocoawithlove.CwlUtils-macOSTests";
				PRODUCT_NAME = "$(TARGET_NAME)";
				SDKROOT = macosx;
			};
			name = Release;
		};
		OBJ_3 /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				COPY_PHASE_STRIP = NO;
				CURRENT_PROJECT_VERSION = 1;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_TESTABILITY = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = "DEBUG=1";
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				ONLY_ACTIVE_ARCH = YES;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
				SWIFT_VERSION = 4.2;
			};
			name = Debug;
		};
		OBJ_4 /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ENABLE_OBJC_ARC = YES;
				COMBINE_HIDPI_IMAGES = YES;
				CURRENT_PROJECT_VERSION = 1;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				IPHONEOS_DEPLOYMENT_TARGET = 8.0;
				MACOSX_DEPLOYMENT_TARGET = 10.10;
				SWIFT_COMPILATION_MODE = wholemodule;
				SWIFT_VERSION = 4.2;
				VALIDATE_PRODUCT = YES;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		C919A6472131478400C7C374 /* Build configuration list for PBXAggregateTarget "CwlPreconditionTesting_iOS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C919A6482131478400C7C374 /* Debug */,
				C919A6492131478400C7C374 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C91ADA5D2130CF3D000EE9B7 /* Build configuration list for PBXAggregateTarget "CwlPreconditionTesting_macOS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C91ADA5E2130CF3D000EE9B7 /* Debug */,
				C91ADA5F2130CF3D000EE9B7 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C945D7C31E5038C4009AFB8E /* Build configuration list for PBXAggregateTarget "PackageFetch" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C945D7C11E5038C4009AFB8E /* Debug */,
				C945D7C21E5038C4009AFB8E /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C94E59AA211C6A5E00FF7E19 /* Build configuration list for PBXAggregateTarget "CwlUtils_iOS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C94E59AB211C6A5E00FF7E19 /* Debug */,
				C94E59AC211C6A5E00FF7E19 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C94E59B1211C6B5D00FF7E19 /* Build configuration list for PBXAggregateTarget "CwlUtils_macOS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C94E59B2211C6B5D00FF7E19 /* Debug */,
				C94E59B3211C6B5D00FF7E19 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C9A3803A1EFF923A00BFF2E5 /* Build configuration list for PBXAggregateTarget "CwlSignalConcat" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C9A380381EFF923A00BFF2E5 /* Debug */,
				C9A380391EFF923A00BFF2E5 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C9DD3D961E41DFB600E23B15 /* Build configuration list for PBXNativeTarget "CwlSignal_iOS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C9DD3D971E41DFB600E23B15 /* Debug */,
				C9DD3D981E41DFB600E23B15 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		C9DD3DA41E41DFBA00E23B15 /* Build configuration list for PBXNativeTarget "CwlSignal_iOSTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				C9DD3DA51E41DFBA00E23B15 /* Debug */,
				C9DD3DA61E41DFBA00E23B15 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_191 /* Build configuration list for PBXNativeTarget "CwlSignal_macOS" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_192 /* Debug */,
				OBJ_193 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_2 /* Build configuration list for PBXProject "CwlSignal" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_3 /* Debug */,
				OBJ_4 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
		OBJ_215 /* Build configuration list for PBXNativeTarget "CwlSignal_macOSTests" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				OBJ_216 /* Debug */,
				OBJ_217 /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Debug;
		};
/* End XCConfigurationList section */
	};
	rootObject = OBJ_1 /* Project object */;
}
